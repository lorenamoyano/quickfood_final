1639029275
AwuilbDvXz%3A85fd4108d3b2d21b4a0b550e36b84596-6f2f9632a6b2d4891a5d6e45817e5fa1
s:19744:"O:33:"phpDocumentor\Reflection\Php\File":12:{s:43:" phpDocumentor\Reflection\Php\File docBlock";N;s:39:" phpDocumentor\Reflection\Php\File hash";s:32:"6f2f9632a6b2d4891a5d6e45817e5fa1";s:39:" phpDocumentor\Reflection\Php\File name";s:44:"8dd467daafbf277f11852e6e23e8672f6297a661.php";s:39:" phpDocumentor\Reflection\Php\File path";s:68:"storage/framework/views/8dd467daafbf277f11852e6e23e8672f6297a661.php";s:41:" phpDocumentor\Reflection\Php\File source";s:13937:"<?php $__env->startSection('content'); ?>
<div class="container">
    <div class="row justify-content-center">
        <div class="col-lg-6">
            <form method="POST" action="<?php echo e(route('register')); ?>" class="formulario_register" onsubmit="return validar_registro()">
                <?php echo csrf_field(); ?>
                <input type="hidden" name="api_token" value="">
                <div class="form-group row">
                    <div class="col-md-12 input-icons">
                        <i class="fa fa-user icon"></i>
                        <input id="nombre" onchange="quitarError('nombreHelp')" type="text" class="form-control <?php $__errorArgs = ['nombre'];
$__bag = $errors->getBag($__errorArgs[1] ?? 'default');
if ($__bag->has($__errorArgs[0])) :
if (isset($message)) { $__messageOriginal = $message; }
$message = $__bag->first($__errorArgs[0]); ?> is-invalid <?php unset($message);
if (isset($__messageOriginal)) { $message = $__messageOriginal; }
endif;
unset($__errorArgs, $__bag); ?>" name="nombre" value="<?php echo e(old('nombre')); ?>" required autocomplete="name" autofocus placeholder="Nombre" style="text-align: center;">
                        <small style="visibility: hidden;" id="nombreHelp" class="form-text text-danger">Campo obligatorio</small>
                        <?php $__errorArgs = ['nombre'];
$__bag = $errors->getBag($__errorArgs[1] ?? 'default');
if ($__bag->has($__errorArgs[0])) :
if (isset($message)) { $__messageOriginal = $message; }
$message = $__bag->first($__errorArgs[0]); ?>
                        <span class="invalid-feedback" role="alert">
                            <strong><?php echo e($message); ?></strong>
                        </span>
                        <?php unset($message);
if (isset($__messageOriginal)) { $message = $__messageOriginal; }
endif;
unset($__errorArgs, $__bag); ?>
                    </div>
                </div>

                <div class="form-row">
                    <div class="col-md-6 input-icons">
                        <i class="fa fa-user icon"></i>
                        <input id="apellido1" onchange="quitarError('apellido1Help')" type="text" class="form-control <?php $__errorArgs = ['apellido1'];
$__bag = $errors->getBag($__errorArgs[1] ?? 'default');
if ($__bag->has($__errorArgs[0])) :
if (isset($message)) { $__messageOriginal = $message; }
$message = $__bag->first($__errorArgs[0]); ?> is-invalid <?php unset($message);
if (isset($__messageOriginal)) { $message = $__messageOriginal; }
endif;
unset($__errorArgs, $__bag); ?>" name="apellido1" value="<?php echo e(old('apellido1')); ?>" required autocomplete="name" autofocus placeholder="Primer apellido" style="text-align: center;">
                        <small style="visibility: hidden;" id="apellido1Help" class="form-text text-danger">Campo obligatorio</small>
                        <?php $__errorArgs = ['apellido1'];
$__bag = $errors->getBag($__errorArgs[1] ?? 'default');
if ($__bag->has($__errorArgs[0])) :
if (isset($message)) { $__messageOriginal = $message; }
$message = $__bag->first($__errorArgs[0]); ?>
                        <span class="invalid-feedback" role="alert">
                            <strong><?php echo e($message); ?></strong>
                        </span>
                        <?php unset($message);
if (isset($__messageOriginal)) { $message = $__messageOriginal; }
endif;
unset($__errorArgs, $__bag); ?>
                    </div>


                    <div class="col-md-6 input-icons">
                        <i class="fa fa-user icon"></i>
                        <input id="apellido2" onchange="quitarError('apellido2Help')" placeholder="Segundo apellido" style="text-align: center;" type="text" class="form-control <?php $__errorArgs = ['apellido2'];
$__bag = $errors->getBag($__errorArgs[1] ?? 'default');
if ($__bag->has($__errorArgs[0])) :
if (isset($message)) { $__messageOriginal = $message; }
$message = $__bag->first($__errorArgs[0]); ?> is-invalid <?php unset($message);
if (isset($__messageOriginal)) { $message = $__messageOriginal; }
endif;
unset($__errorArgs, $__bag); ?>" name="apellido2" value="<?php echo e(old('apellido2')); ?>" required autocomplete="name" autofocus>
                        <small style="visibility: hidden;" id="apellido2Help" class="form-text text-danger">Campo obligatorio</small>
                        <?php $__errorArgs = ['apellido2'];
$__bag = $errors->getBag($__errorArgs[1] ?? 'default');
if ($__bag->has($__errorArgs[0])) :
if (isset($message)) { $__messageOriginal = $message; }
$message = $__bag->first($__errorArgs[0]); ?>
                        <span class="invalid-feedback" role="alert">
                            <strong><?php echo e($message); ?></strong>
                        </span>
                        <?php unset($message);
if (isset($__messageOriginal)) { $message = $__messageOriginal; }
endif;
unset($__errorArgs, $__bag); ?>
                    </div>
                </div>
                <br>
                <div class="form-row">
                    <div class="col-md-6 input-icons">
                        <i class="fas fa-address-card icon"></i>
                        <input id="DNI" onchange="quitarError('DNIHelp')" placeholder="DNI" style="text-align: center;" type="text" class="form-control <?php $__errorArgs = ['DNI'];
$__bag = $errors->getBag($__errorArgs[1] ?? 'default');
if ($__bag->has($__errorArgs[0])) :
if (isset($message)) { $__messageOriginal = $message; }
$message = $__bag->first($__errorArgs[0]); ?> is-invalid <?php unset($message);
if (isset($__messageOriginal)) { $message = $__messageOriginal; }
endif;
unset($__errorArgs, $__bag); ?>" name="DNI" value="<?php echo e(old('DNI')); ?>" required autocomplete="name" autofocus>
                        <small style="visibility: hidden;" id="DNIHelp" class="form-text text-danger">Campo alfanumérico y obligatorio</small>
                        <?php $__errorArgs = ['DNI'];
$__bag = $errors->getBag($__errorArgs[1] ?? 'default');
if ($__bag->has($__errorArgs[0])) :
if (isset($message)) { $__messageOriginal = $message; }
$message = $__bag->first($__errorArgs[0]); ?>
                        <span class="invalid-feedback" role="alert">
                            <strong><?php echo e($message); ?></strong>
                        </span>
                        <?php unset($message);
if (isset($__messageOriginal)) { $message = $__messageOriginal; }
endif;
unset($__errorArgs, $__bag); ?>
                    </div>

                    <div class="col-md-6 input-icons">
                        <i class="fas fa-phone-alt icon"></i>
                        <input id="telefono" onchange="quitarError('telefonoHelp')" placeholder="Teléfono" style="text-align: center;" type="text" class="form-control <?php $__errorArgs = ['telefono'];
$__bag = $errors->getBag($__errorArgs[1] ?? 'default');
if ($__bag->has($__errorArgs[0])) :
if (isset($message)) { $__messageOriginal = $message; }
$message = $__bag->first($__errorArgs[0]); ?> is-invalid <?php unset($message);
if (isset($__messageOriginal)) { $message = $__messageOriginal; }
endif;
unset($__errorArgs, $__bag); ?>" name="telefono" value="<?php echo e(old('telefono')); ?>" required autocomplete="name" autofocus>
                        <small style="visibility: hidden;" id="telefonoHelp" class="form-text text-danger">Campo numérico obligatorio</small>
                        <?php $__errorArgs = ['telefono'];
$__bag = $errors->getBag($__errorArgs[1] ?? 'default');
if ($__bag->has($__errorArgs[0])) :
if (isset($message)) { $__messageOriginal = $message; }
$message = $__bag->first($__errorArgs[0]); ?>
                        <span class="invalid-feedback" role="alert">
                            <strong><?php echo e($message); ?></strong>
                        </span>
                        <?php unset($message);
if (isset($__messageOriginal)) { $message = $__messageOriginal; }
endif;
unset($__errorArgs, $__bag); ?>
                    </div>

                </div>
                <br>
                <div class="form-group row">
                    <div class="col-md-12 input-icons">
                        <i class="fas fa-at icon"></i>
                        <input id="email" onchange="quitarError('emailHelp')" placeholder="EMAIL" style="text-align: center;" type="email" class="form-control <?php $__errorArgs = ['email'];
$__bag = $errors->getBag($__errorArgs[1] ?? 'default');
if ($__bag->has($__errorArgs[0])) :
if (isset($message)) { $__messageOriginal = $message; }
$message = $__bag->first($__errorArgs[0]); ?> is-invalid <?php unset($message);
if (isset($__messageOriginal)) { $message = $__messageOriginal; }
endif;
unset($__errorArgs, $__bag); ?>" name="email" value="<?php echo e(old('email')); ?>" required autocomplete="email">
                        <small style="visibility: hidden;" id="emailHelp" class="form-text text-danger">Email incorrecto y obligatorio</small>
                        <?php $__errorArgs = ['email'];
$__bag = $errors->getBag($__errorArgs[1] ?? 'default');
if ($__bag->has($__errorArgs[0])) :
if (isset($message)) { $__messageOriginal = $message; }
$message = $__bag->first($__errorArgs[0]); ?>
                        <span class="invalid-feedback" role="alert">
                            <strong><?php echo e($message); ?></strong>
                        </span>
                        <?php unset($message);
if (isset($__messageOriginal)) { $message = $__messageOriginal; }
endif;
unset($__errorArgs, $__bag); ?>
                    </div>
                </div>
                <div class="form-row">
                    <div class="col-md-6 input-icons">
                        <i class="fas fa-key icon"></i>
                        <input id="password" onchange="quitarError('passwordHelp')" style="text-align: center;" placeholder="Contraseña" type="password" class="form-control <?php $__errorArgs = ['password'];
$__bag = $errors->getBag($__errorArgs[1] ?? 'default');
if ($__bag->has($__errorArgs[0])) :
if (isset($message)) { $__messageOriginal = $message; }
$message = $__bag->first($__errorArgs[0]); ?> is-invalid <?php unset($message);
if (isset($__messageOriginal)) { $message = $__messageOriginal; }
endif;
unset($__errorArgs, $__bag); ?>" name="password" required autocomplete="new-password">
                        <small style="visibility: hidden;" id="passwordHelp" class="form-text text-danger">Campo obligatorio</small>
                        <?php $__errorArgs = ['password'];
$__bag = $errors->getBag($__errorArgs[1] ?? 'default');
if ($__bag->has($__errorArgs[0])) :
if (isset($message)) { $__messageOriginal = $message; }
$message = $__bag->first($__errorArgs[0]); ?>
                        <span class="invalid-feedback" role="alert">
                            <strong><?php echo e($message); ?></strong>
                        </span>
                        <?php unset($message);
if (isset($__messageOriginal)) { $message = $__messageOriginal; }
endif;
unset($__errorArgs, $__bag); ?>
                    </div>

                    <div class="col-md-6 input-icons">
                        <i class="fas fa-key icon"></i>
                        <input id="password-confirm" onchange="quitarError('password-confirmHelp')" style="text-align: center;" placeholder="Confirmar contraseña" type="password" class="form-control" name="password_confirmation" required autocomplete="new-password">
                        <small style="visibility: hidden;" id="password-confirmHelp" class="form-text text-danger">Campo obligatorio</small>
                    </div>
                </div>
                <br>
                <div class="form-group row">
                    <div class="col-md-12 input-icons">
                        <i class="fas fa-globe-europe icon"></i>
                        <input id="ciudad" onchange="quitarError('ciudadHelp')" style="text-align: center;" placeholder="Localidad" type="text" class="form-control <?php $__errorArgs = ['name'];
$__bag = $errors->getBag($__errorArgs[1] ?? 'default');
if ($__bag->has($__errorArgs[0])) :
if (isset($message)) { $__messageOriginal = $message; }
$message = $__bag->first($__errorArgs[0]); ?> is-invalid <?php unset($message);
if (isset($__messageOriginal)) { $message = $__messageOriginal; }
endif;
unset($__errorArgs, $__bag); ?>" name="ciudad" value="<?php echo e(old('ciudad')); ?>" required autocomplete="name" autofocus>
                        <small style="visibility: hidden;" id="ciudadHelp" class="form-text text-danger">Campo obligatorio</small>
                        <div class="form-group row mt-3">
                            <div class="col-lg-6 text-center offset-lg-3">
                                <button type="submit" class="btn btn-primary" id="submit">
                                    <?php echo e(__('Register')); ?>

                                </button>
                            </div>
                        </div>



                        <?php $__errorArgs = ['name'];
$__bag = $errors->getBag($__errorArgs[1] ?? 'default');
if ($__bag->has($__errorArgs[0])) :
if (isset($message)) { $__messageOriginal = $message; }
$message = $__bag->first($__errorArgs[0]); ?>
                        <span class="invalid-feedback" role="alert">
                            <strong><?php echo e($message); ?></strong>
                        </span>
                        <?php unset($message);
if (isset($__messageOriginal)) { $message = $__messageOriginal; }
endif;
unset($__errorArgs, $__bag); ?>
                    </div>

                </div>
            </form>
        </div>
    </div>
</div>
<?php $__env->stopSection(); ?>
<?php echo $__env->make('layouts.app', \Illuminate\Support\Arr::except(get_defined_vars(), ['__data', '__path']))->render(); ?><?php /**PATH C:\xampp\htdocs\quickfood\quickfood\resources\views/auth/register.blade.php ENDPATH**/ ?>";s:45:" phpDocumentor\Reflection\Php\File namespaces";a:0:{}s:43:" phpDocumentor\Reflection\Php\File includes";a:0:{}s:44:" phpDocumentor\Reflection\Php\File functions";a:0:{}s:44:" phpDocumentor\Reflection\Php\File constants";a:0:{}s:42:" phpDocumentor\Reflection\Php\File classes";a:0:{}s:45:" phpDocumentor\Reflection\Php\File interfaces";a:0:{}s:41:" phpDocumentor\Reflection\Php\File traits";a:0:{}}";