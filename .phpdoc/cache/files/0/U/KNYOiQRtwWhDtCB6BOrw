1639029367
AwuilbDvXz%3Ae3ffcbf707a2e696ef51dc790c4f5e5d-7b13d6cd8f44f9fd9d682adf4e82d7cc
s:41692:"TzozMzoicGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxGaWxlIjoxMjp7czo0MzoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcRmlsZQBkb2NCbG9jayI7TjtzOjM5OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxGaWxlAGhhc2giO3M6MzI6IjdiMTNkNmNkOGY0NGY5ZmQ5ZDY4MmFkZjRlODJkN2NjIjtzOjM5OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxGaWxlAG5hbWUiO3M6MTM6ImZ1bmN0aW9ucy5waHAiO3M6Mzk6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXEZpbGUAcGF0aCI7czozNDoidmVuZG9yL3BzeS9wc3lzaC9zcmMvZnVuY3Rpb25zLnBocCI7czo0MToiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcRmlsZQBzb3VyY2UiO3M6MTQ1MTM6Ijw/cGhwCgovKgogKiBUaGlzIGZpbGUgaXMgcGFydCBvZiBQc3kgU2hlbGwuCiAqCiAqIChjKSAyMDEyLTIwMjAgSnVzdGluIEhpbGVtYW4KICoKICogRm9yIHRoZSBmdWxsIGNvcHlyaWdodCBhbmQgbGljZW5zZSBpbmZvcm1hdGlvbiwgcGxlYXNlIHZpZXcgdGhlIExJQ0VOU0UKICogZmlsZSB0aGF0IHdhcyBkaXN0cmlidXRlZCB3aXRoIHRoaXMgc291cmNlIGNvZGUuCiAqLwoKbmFtZXNwYWNlIFBzeTsKCnVzZSBQc3lcRXhlY3V0aW9uTG9vcFxQcm9jZXNzRm9ya2VyOwp1c2UgUHN5XFZlcnNpb25VcGRhdGVyXEdpdEh1YkNoZWNrZXI7CnVzZSBTeW1mb255XENvbXBvbmVudFxDb25zb2xlXElucHV0XEFyZ3ZJbnB1dDsKdXNlIFN5bWZvbnlcQ29tcG9uZW50XENvbnNvbGVcSW5wdXRcSW5wdXRBcmd1bWVudDsKdXNlIFN5bWZvbnlcQ29tcG9uZW50XENvbnNvbGVcSW5wdXRcSW5wdXREZWZpbml0aW9uOwp1c2UgU3ltZm9ueVxDb21wb25lbnRcQ29uc29sZVxJbnB1dFxJbnB1dE9wdGlvbjsKdXNlIFhkZ0Jhc2VEaXJcWGRnOwoKaWYgKCFcZnVuY3Rpb25fZXhpc3RzKCdQc3lcXHNoJykpIHsKICAgIC8qKgogICAgICogQ29tbWFuZCB0byByZXR1cm4gdGhlIGV2YWwtYWJsZSBjb2RlIHRvIHN0YXJ0dXAgUHN5U0guCiAgICAgKgogICAgICogICAgIGV2YWwoXFBzeVxzaCgpKTsKICAgICAqCiAgICAgKiBAcmV0dXJuIHN0cmluZwogICAgICovCiAgICBmdW5jdGlvbiBzaCgpCiAgICB7CiAgICAgICAgcmV0dXJuICdleHRyYWN0KFxQc3lcZGVidWcoZ2V0X2RlZmluZWRfdmFycygpLCBpc3NldCgkdGhpcykgPyAkdGhpcyA6IEBnZXRfY2FsbGVkX2NsYXNzKCkpKTsnOwogICAgfQp9CgppZiAoIVxmdW5jdGlvbl9leGlzdHMoJ1BzeVxcZGVidWcnKSkgewogICAgLyoqCiAgICAgKiBJbnZva2UgYSBQc3kgU2hlbGwgZnJvbSB0aGUgY3VycmVudCBjb250ZXh0LgogICAgICoKICAgICAqIEZvciBleGFtcGxlOgogICAgICoKICAgICAqICAgICBmb3JlYWNoICgkaXRlbXMgYXMgJGl0ZW0pIHsKICAgICAqICAgICAgICAgXFBzeVxkZWJ1ZyhnZXRfZGVmaW5lZF92YXJzKCkpOwogICAgICogICAgIH0KICAgICAqCiAgICAgKiBJZiB5b3Ugd291bGQgbGlrZSB5b3VyIHNoZWxsIGludGVyYWN0aW9uIHRvIGFmZmVjdCB0aGUgc3RhdGUgb2YgdGhlCiAgICAgKiBjdXJyZW50IGNvbnRleHQsIHlvdSBjYW4gZXh0cmFjdCgpIHRoZSB2YWx1ZXMgcmV0dXJuZWQgZnJvbSB0aGlzIGNhbGw6CiAgICAgKgogICAgICogICAgIGZvcmVhY2ggKCRpdGVtcyBhcyAkaXRlbSkgewogICAgICogICAgICAgICBleHRyYWN0KFxQc3lcZGVidWcoZ2V0X2RlZmluZWRfdmFycygpKSk7CiAgICAgKiAgICAgICAgIHZhcl9kdW1wKCRpdGVtKTsgLy8gd2lsbCBiZSB3aGF0ZXZlciB5b3Ugc2V0ICRpdGVtIHRvIGluIFBzeSBTaGVsbAogICAgICogICAgIH0KICAgICAqCiAgICAgKiBPcHRpb25hbGx5LCBzdXBwbHkgYW4gb2JqZWN0IGFzIHRoZSBgJGJpbmRUb2AgcGFyYW1ldGVyLiBUaGlzIGRldGVybWluZXMKICAgICAqIHRoZSB2YWx1ZSBgJHRoaXNgIHdpbGwgaGF2ZSBpbiB0aGUgc2hlbGwsIGFuZCBzZXRzIHVwIGNsYXNzIHNjb3BlIHNvIHRoYXQKICAgICAqIHByaXZhdGUgYW5kIHByb3RlY3RlZCBtZW1iZXJzIGFyZSBhY2Nlc3NpYmxlOgogICAgICoKICAgICAqICAgICBjbGFzcyBGb28gewogICAgICogICAgICAgICBmdW5jdGlvbiBiYXIoKSB7CiAgICAgKiAgICAgICAgICAgICBcUHN5XGRlYnVnKGdldF9kZWZpbmVkX3ZhcnMoKSwgJHRoaXMpOwogICAgICogICAgICAgICB9CiAgICAgKiAgICAgfQogICAgICoKICAgICAqIEZvciB0aGUgc3RhdGljIGVxdWl2YWxlbnQsIHBhc3MgYSBjbGFzcyBuYW1lIGFzIHRoZSBgJGJpbmRUb2AgcGFyYW1ldGVyLgogICAgICogVGhpcyBtYWtlcyBgc2VsZmAgd29yayBpbiB0aGUgc2hlbGwsIGFuZCBzZXRzIHVwIHN0YXRpYyBzY29wZSBzbyB0aGF0CiAgICAgKiBwcml2YXRlIGFuZCBwcm90ZWN0ZWQgc3RhdGljIG1lbWJlcnMgYXJlIGFjY2Vzc2libGU6CiAgICAgKgogICAgICogICAgIGNsYXNzIEZvbyB7CiAgICAgKiAgICAgICAgIHN0YXRpYyBmdW5jdGlvbiBiYXIoKSB7CiAgICAgKiAgICAgICAgICAgICBcUHN5XGRlYnVnKGdldF9kZWZpbmVkX3ZhcnMoKSwgZ2V0X2NhbGxlZF9jbGFzcygpKTsKICAgICAqICAgICAgICAgfQogICAgICogICAgIH0KICAgICAqCiAgICAgKiBAcGFyYW0gYXJyYXkgICAgICAgICAkdmFycyAgIFNjb3BlIHZhcmlhYmxlcyBmcm9tIHRoZSBjYWxsaW5nIGNvbnRleHQgKGRlZmF1bHQ6IFtdKQogICAgICogQHBhcmFtIG9iamVjdHxzdHJpbmcgJGJpbmRUbyBCb3VuZCBvYmplY3QgKCR0aGlzKSBvciBjbGFzcyAoc2VsZikgdmFsdWUgZm9yIHRoZSBzaGVsbAogICAgICoKICAgICAqIEByZXR1cm4gYXJyYXkgU2NvcGUgdmFyaWFibGVzIGZyb20gdGhlIGRlYnVnZ2VyIHNlc3Npb24KICAgICAqLwogICAgZnVuY3Rpb24gZGVidWcoYXJyYXkgJHZhcnMgPSBbXSwgJGJpbmRUbyA9IG51bGwpCiAgICB7CiAgICAgICAgZWNobyBQSFBfRU9MOwoKICAgICAgICAkc2ggPSBuZXcgU2hlbGwoKTsKICAgICAgICAkc2gtPnNldFNjb3BlVmFyaWFibGVzKCR2YXJzKTsKCiAgICAgICAgLy8gU2hvdyBhIGNvdXBsZSBvZiBsaW5lcyBvZiBjYWxsIGNvbnRleHQgZm9yIHRoZSBkZWJ1ZyBzZXNzaW9uLgogICAgICAgIC8vCiAgICAgICAgLy8gQHRvZG8gY29tZSB1cCB3aXRoIGEgYmV0dGVyIHdheSBvZiBkb2luZyB0aGlzIHdoaWNoIGRvZXNuJ3QgaW52b2x2ZSBpbmplY3RpbmcgaW5wdXQgOi1QCiAgICAgICAgaWYgKCRzaC0+aGFzKCd3aGVyZWFtaScpKSB7CiAgICAgICAgICAgICRzaC0+YWRkSW5wdXQoJ3doZXJlYW1pIC1uMicsIHRydWUpOwogICAgICAgIH0KCiAgICAgICAgaWYgKFxpc19zdHJpbmcoJGJpbmRUbykpIHsKICAgICAgICAgICAgJHNoLT5zZXRCb3VuZENsYXNzKCRiaW5kVG8pOwogICAgICAgIH0gZWxzZWlmICgkYmluZFRvICE9PSBudWxsKSB7CiAgICAgICAgICAgICRzaC0+c2V0Qm91bmRPYmplY3QoJGJpbmRUbyk7CiAgICAgICAgfQoKICAgICAgICAkc2gtPnJ1bigpOwoKICAgICAgICByZXR1cm4gJHNoLT5nZXRTY29wZVZhcmlhYmxlcyhmYWxzZSk7CiAgICB9Cn0KCmlmICghXGZ1bmN0aW9uX2V4aXN0cygnUHN5XFxpbmZvJykpIHsKICAgIC8qKgogICAgICogR2V0IGEgYnVuY2ggb2YgZGVidWdnaW5nIGluZm8gYWJvdXQgdGhlIGN1cnJlbnQgUHN5U0ggZW52aXJvbm1lbnQgYW5kCiAgICAgKiBjb25maWd1cmF0aW9uLgogICAgICoKICAgICAqIElmIGEgQ29uZmlndXJhdGlvbiBwYXJhbSBpcyBwYXNzZWQsIHRoYXQgY29uZmlndXJhdGlvbiBpcyBzdG9yZWQgYW5kCiAgICAgKiB1c2VkIGZvciB0aGUgY3VycmVudCBzaGVsbCBzZXNzaW9uLCBhbmQgbm8gZGVidWdnaW5nIGluZm8gaXMgcmV0dXJuZWQuCiAgICAgKgogICAgICogQHBhcmFtIENvbmZpZ3VyYXRpb258bnVsbCAkY29uZmlnCiAgICAgKgogICAgICogQHJldHVybiBhcnJheXxudWxsCiAgICAgKi8KICAgIGZ1bmN0aW9uIGluZm8oQ29uZmlndXJhdGlvbiAkY29uZmlnID0gbnVsbCkKICAgIHsKICAgICAgICBzdGF0aWMgJGxhc3RDb25maWc7CiAgICAgICAgaWYgKCRjb25maWcgIT09IG51bGwpIHsKICAgICAgICAgICAgJGxhc3RDb25maWcgPSAkY29uZmlnOwoKICAgICAgICAgICAgcmV0dXJuOwogICAgICAgIH0KCiAgICAgICAgJHhkZyA9IG5ldyBYZGcoKTsKICAgICAgICAkaG9tZSA9IFxydHJpbShcc3RyX3JlcGxhY2UoJ1xcJywgJy8nLCAkeGRnLT5nZXRIb21lRGlyKCkpLCAnLycpOwogICAgICAgICRob21lUGF0dGVybiA9ICcjXicgLiBccHJlZ19xdW90ZSgkaG9tZSwgJyMnKSAuICcvIyc7CgogICAgICAgICRwcmV0dHlQYXRoID0gZnVuY3Rpb24gKCRwYXRoKSB1c2UgKCRob21lUGF0dGVybikgewogICAgICAgICAgICBpZiAoXGlzX3N0cmluZygkcGF0aCkpIHsKICAgICAgICAgICAgICAgIHJldHVybiBccHJlZ19yZXBsYWNlKCRob21lUGF0dGVybiwgJ34vJywgJHBhdGgpOwogICAgICAgICAgICB9IGVsc2UgewogICAgICAgICAgICAgICAgcmV0dXJuICRwYXRoOwogICAgICAgICAgICB9CiAgICAgICAgfTsKCiAgICAgICAgJGNvbmZpZyA9ICRsYXN0Q29uZmlnID86IG5ldyBDb25maWd1cmF0aW9uKCk7CiAgICAgICAgJGNvbmZpZ0VudiA9IChpc3NldCgkX1NFUlZFUlsnUFNZU0hfQ09ORklHJ10pICYmICRfU0VSVkVSWydQU1lTSF9DT05GSUcnXSkgPyAkX1NFUlZFUlsnUFNZU0hfQ09ORklHJ10gOiBmYWxzZTsKCiAgICAgICAgJGNvcmUgPSBbCiAgICAgICAgICAgICdQc3lTSCB2ZXJzaW9uJyAgICAgICA9PiBTaGVsbDo6VkVSU0lPTiwKICAgICAgICAgICAgJ1BIUCB2ZXJzaW9uJyAgICAgICAgID0+IFBIUF9WRVJTSU9OLAogICAgICAgICAgICAnT1MnICAgICAgICAgICAgICAgICAgPT4gUEhQX09TLAogICAgICAgICAgICAnZGVmYXVsdCBpbmNsdWRlcycgICAgPT4gJGNvbmZpZy0+Z2V0RGVmYXVsdEluY2x1ZGVzKCksCiAgICAgICAgICAgICdyZXF1aXJlIHNlbWljb2xvbnMnICA9PiAkY29uZmlnLT5yZXF1aXJlU2VtaWNvbG9ucygpLAogICAgICAgICAgICAnZXJyb3IgbG9nZ2luZyBsZXZlbCcgPT4gJGNvbmZpZy0+ZXJyb3JMb2dnaW5nTGV2ZWwoKSwKICAgICAgICAgICAgJ2NvbmZpZyBmaWxlJyAgICAgICAgID0+IFsKICAgICAgICAgICAgICAgICdkZWZhdWx0IGNvbmZpZyBmaWxlJyA9PiAkcHJldHR5UGF0aCgkY29uZmlnLT5nZXRDb25maWdGaWxlKCkpLAogICAgICAgICAgICAgICAgJ2xvY2FsIGNvbmZpZyBmaWxlJyAgID0+ICRwcmV0dHlQYXRoKCRjb25maWctPmdldExvY2FsQ29uZmlnRmlsZSgpKSwKICAgICAgICAgICAgICAgICdQU1lTSF9DT05GSUcgZW52JyAgICA9PiAkcHJldHR5UGF0aCgkY29uZmlnRW52KSwKICAgICAgICAgICAgXSwKICAgICAgICAgICAgLy8gJ2NvbmZpZyBkaXInICA9PiAkY29uZmlnLT5nZXRDb25maWdEaXIoKSwKICAgICAgICAgICAgLy8gJ2RhdGEgZGlyJyAgICA9PiAkY29uZmlnLT5nZXREYXRhRGlyKCksCiAgICAgICAgICAgIC8vICdydW50aW1lIGRpcicgPT4gJGNvbmZpZy0+Z2V0UnVudGltZURpcigpLAogICAgICAgIF07CgogICAgICAgIC8vIFVzZSBhbiBleHBsaWNpdCwgZnJlc2ggdXBkYXRlIGNoZWNrIGhlcmUsIHJhdGhlciB0aGFuIHJlbHlpbmcgb24gd2hhdGV2ZXIgaXMgaW4gJGNvbmZpZy4KICAgICAgICAkY2hlY2tlciA9IG5ldyBHaXRIdWJDaGVja2VyKCk7CiAgICAgICAgJHVwZGF0ZUF2YWlsYWJsZSA9IG51bGw7CiAgICAgICAgJGxhdGVzdCA9IG51bGw7CiAgICAgICAgdHJ5IHsKICAgICAgICAgICAgJHVwZGF0ZUF2YWlsYWJsZSA9ICEkY2hlY2tlci0+aXNMYXRlc3QoKTsKICAgICAgICAgICAgJGxhdGVzdCA9ICRjaGVja2VyLT5nZXRMYXRlc3QoKTsKICAgICAgICB9IGNhdGNoIChcRXhjZXB0aW9uICRlKSB7CiAgICAgICAgfQoKICAgICAgICAkdXBkYXRlcyA9IFsKICAgICAgICAgICAgJ3VwZGF0ZSBhdmFpbGFibGUnICAgICAgID0+ICR1cGRhdGVBdmFpbGFibGUsCiAgICAgICAgICAgICdsYXRlc3QgcmVsZWFzZSB2ZXJzaW9uJyA9PiAkbGF0ZXN0LAogICAgICAgICAgICAndXBkYXRlIGNoZWNrIGludGVydmFsJyAgPT4gJGNvbmZpZy0+Z2V0VXBkYXRlQ2hlY2soKSwKICAgICAgICAgICAgJ3VwZGF0ZSBjYWNoZSBmaWxlJyAgICAgID0+ICRwcmV0dHlQYXRoKCRjb25maWctPmdldFVwZGF0ZUNoZWNrQ2FjaGVGaWxlKCkpLAogICAgICAgIF07CgogICAgICAgICRpbnB1dCA9IFsKICAgICAgICAgICAgJ2ludGVyYWN0aXZlIG1vZGUnICA9PiAkY29uZmlnLT5pbnRlcmFjdGl2ZU1vZGUoKSwKICAgICAgICAgICAgJ2lucHV0IGludGVyYWN0aXZlJyA9PiAkY29uZmlnLT5nZXRJbnB1dEludGVyYWN0aXZlKCksCiAgICAgICAgXTsKCiAgICAgICAgaWYgKCRjb25maWctPmhhc1JlYWRsaW5lKCkpIHsKICAgICAgICAgICAgJGluZm8gPSBccmVhZGxpbmVfaW5mbygpOwoKICAgICAgICAgICAgJHJlYWRsaW5lID0gWwogICAgICAgICAgICAgICAgJ3JlYWRsaW5lIGF2YWlsYWJsZScgPT4gdHJ1ZSwKICAgICAgICAgICAgICAgICdyZWFkbGluZSBlbmFibGVkJyAgID0+ICRjb25maWctPnVzZVJlYWRsaW5lKCksCiAgICAgICAgICAgICAgICAncmVhZGxpbmUgc2VydmljZScgICA9PiBcZ2V0X2NsYXNzKCRjb25maWctPmdldFJlYWRsaW5lKCkpLAogICAgICAgICAgICBdOwoKICAgICAgICAgICAgaWYgKGlzc2V0KCRpbmZvWydsaWJyYXJ5X3ZlcnNpb24nXSkpIHsKICAgICAgICAgICAgICAgICRyZWFkbGluZVsncmVhZGxpbmUgbGlicmFyeSddID0gJGluZm9bJ2xpYnJhcnlfdmVyc2lvbiddOwogICAgICAgICAgICB9CgogICAgICAgICAgICBpZiAoaXNzZXQoJGluZm9bJ3JlYWRsaW5lX25hbWUnXSkgJiYgJGluZm9bJ3JlYWRsaW5lX25hbWUnXSAhPT0gJycpIHsKICAgICAgICAgICAgICAgICRyZWFkbGluZVsncmVhZGxpbmUgbmFtZSddID0gJGluZm9bJ3JlYWRsaW5lX25hbWUnXTsKICAgICAgICAgICAgfQogICAgICAgIH0gZWxzZSB7CiAgICAgICAgICAgICRyZWFkbGluZSA9IFsKICAgICAgICAgICAgICAgICdyZWFkbGluZSBhdmFpbGFibGUnID0+IGZhbHNlLAogICAgICAgICAgICBdOwogICAgICAgIH0KCiAgICAgICAgJG91dHB1dCA9IFsKICAgICAgICAgICAgJ2NvbG9yIG1vZGUnICAgICAgID0+ICRjb25maWctPmNvbG9yTW9kZSgpLAogICAgICAgICAgICAnb3V0cHV0IGRlY29yYXRlZCcgPT4gJGNvbmZpZy0+Z2V0T3V0cHV0RGVjb3JhdGVkKCksCiAgICAgICAgICAgICdvdXRwdXQgdmVyYm9zaXR5JyA9PiAkY29uZmlnLT52ZXJib3NpdHkoKSwKICAgICAgICBdOwoKICAgICAgICAkcGNudGwgPSBbCiAgICAgICAgICAgICdwY250bCBhdmFpbGFibGUnID0+IFByb2Nlc3NGb3JrZXI6OmlzUGNudGxTdXBwb3J0ZWQoKSwKICAgICAgICAgICAgJ3Bvc2l4IGF2YWlsYWJsZScgPT4gUHJvY2Vzc0Zvcmtlcjo6aXNQb3NpeFN1cHBvcnRlZCgpLAogICAgICAgIF07CgogICAgICAgIGlmICgkZGlzYWJsZWRQY250bCA9IFByb2Nlc3NGb3JrZXI6OmRpc2FibGVkUGNudGxGdW5jdGlvbnMoKSkgewogICAgICAgICAgICAkcGNudGxbJ2Rpc2FibGVkIHBjbnRsIGZ1bmN0aW9ucyddID0gJGRpc2FibGVkUGNudGw7CiAgICAgICAgfQoKICAgICAgICBpZiAoJGRpc2FibGVkUG9zaXggPSBQcm9jZXNzRm9ya2VyOjpkaXNhYmxlZFBvc2l4RnVuY3Rpb25zKCkpIHsKICAgICAgICAgICAgJHBjbnRsWydkaXNhYmxlZCBwb3NpeCBmdW5jdGlvbnMnXSA9ICRkaXNhYmxlZFBvc2l4OwogICAgICAgIH0KCiAgICAgICAgJHBjbnRsWyd1c2UgcGNudGwnXSA9ICRjb25maWctPnVzZVBjbnRsKCk7CgogICAgICAgICRoaXN0b3J5ID0gWwogICAgICAgICAgICAnaGlzdG9yeSBmaWxlJyAgICAgPT4gJHByZXR0eVBhdGgoJGNvbmZpZy0+Z2V0SGlzdG9yeUZpbGUoKSksCiAgICAgICAgICAgICdoaXN0b3J5IHNpemUnICAgICA9PiAkY29uZmlnLT5nZXRIaXN0b3J5U2l6ZSgpLAogICAgICAgICAgICAnZXJhc2UgZHVwbGljYXRlcycgPT4gJGNvbmZpZy0+Z2V0RXJhc2VEdXBsaWNhdGVzKCksCiAgICAgICAgXTsKCiAgICAgICAgJGRvY3MgPSBbCiAgICAgICAgICAgICdtYW51YWwgZGIgZmlsZScgICA9PiAkcHJldHR5UGF0aCgkY29uZmlnLT5nZXRNYW51YWxEYkZpbGUoKSksCiAgICAgICAgICAgICdzcWxpdGUgYXZhaWxhYmxlJyA9PiB0cnVlLAogICAgICAgIF07CgogICAgICAgIHRyeSB7CiAgICAgICAgICAgIGlmICgkZGIgPSAkY29uZmlnLT5nZXRNYW51YWxEYigpKSB7CiAgICAgICAgICAgICAgICBpZiAoJHEgPSAkZGItPnF1ZXJ5KCdTRUxFQ1QgKiBGUk9NIG1ldGE7JykpIHsKICAgICAgICAgICAgICAgICAgICAkcS0+c2V0RmV0Y2hNb2RlKFxQRE86OkZFVENIX0tFWV9QQUlSKTsKICAgICAgICAgICAgICAgICAgICAkbWV0YSA9ICRxLT5mZXRjaEFsbCgpOwoKICAgICAgICAgICAgICAgICAgICBmb3JlYWNoICgkbWV0YSBhcyAka2V5ID0+ICR2YWwpIHsKICAgICAgICAgICAgICAgICAgICAgICAgc3dpdGNoICgka2V5KSB7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICBjYXNlICdidWlsdF9hdCc6CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgJGQgPSBuZXcgXERhdGVUaW1lKCdAJyAuICR2YWwpOwogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICR2YWwgPSAkZC0+Zm9ybWF0KFxEYXRlVGltZTo6UkZDMjgyMik7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgYnJlYWs7CiAgICAgICAgICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgICAgICAgICAgJGtleSA9ICdkYiAnIC4gXHN0cl9yZXBsYWNlKCdfJywgJyAnLCAka2V5KTsKICAgICAgICAgICAgICAgICAgICAgICAgJGRvY3NbJGtleV0gPSAkdmFsOwogICAgICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgIH0gZWxzZSB7CiAgICAgICAgICAgICAgICAgICAgJGRvY3NbJ2RiIHNjaGVtYSddID0gJzAuMS4wJzsKICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgfQogICAgICAgIH0gY2F0Y2ggKEV4Y2VwdGlvblxSdW50aW1lRXhjZXB0aW9uICRlKSB7CiAgICAgICAgICAgIGlmICgkZS0+Z2V0TWVzc2FnZSgpID09PSAnU1FMaXRlIFBETyBkcml2ZXIgbm90IGZvdW5kJykgewogICAgICAgICAgICAgICAgJGRvY3NbJ3NxbGl0ZSBhdmFpbGFibGUnXSA9IGZhbHNlOwogICAgICAgICAgICB9IGVsc2UgewogICAgICAgICAgICAgICAgdGhyb3cgJGU7CiAgICAgICAgICAgIH0KICAgICAgICB9CgogICAgICAgICRhdXRvY29tcGxldGUgPSBbCiAgICAgICAgICAgICd0YWIgY29tcGxldGlvbiBlbmFibGVkJyA9PiAkY29uZmlnLT51c2VUYWJDb21wbGV0aW9uKCksCiAgICAgICAgICAgICdicmFja2V0ZWQgcGFzdGUnICAgICAgICA9PiAkY29uZmlnLT51c2VCcmFja2V0ZWRQYXN0ZSgpLAogICAgICAgIF07CgogICAgICAgIC8vIFNoZW5hbmlnYW5zLCBidXQgdG90YWxseSBqdXN0aWZpZWQuCiAgICAgICAgaWYgKCRzaGVsbCA9IFN1ZG86OmZldGNoUHJvcGVydHkoJGNvbmZpZywgJ3NoZWxsJykpIHsKICAgICAgICAgICAgJGNvcmVbJ2xvb3AgbGlzdGVuZXJzJ10gPSBcYXJyYXlfbWFwKCdnZXRfY2xhc3MnLCBTdWRvOjpmZXRjaFByb3BlcnR5KCRzaGVsbCwgJ2xvb3BMaXN0ZW5lcnMnKSk7CiAgICAgICAgICAgICRjb3JlWydjb21tYW5kcyddICAgICAgID0gXGFycmF5X21hcCgnZ2V0X2NsYXNzJywgJHNoZWxsLT5hbGwoKSk7CgogICAgICAgICAgICAkYXV0b2NvbXBsZXRlWydjdXN0b20gbWF0Y2hlcnMnXSA9IFxhcnJheV9tYXAoJ2dldF9jbGFzcycsIFN1ZG86OmZldGNoUHJvcGVydHkoJHNoZWxsLCAnbWF0Y2hlcnMnKSk7CiAgICAgICAgfQoKICAgICAgICAvLyBAdG9kbyBTaG93IFByZXNlbnRlciAvIGN1c3RvbSBjYXN0ZXJzLgoKICAgICAgICByZXR1cm4gXGFycmF5X21lcmdlKCRjb3JlLCBcY29tcGFjdCgndXBkYXRlcycsICdwY250bCcsICdpbnB1dCcsICdyZWFkbGluZScsICdvdXRwdXQnLCAnaGlzdG9yeScsICdkb2NzJywgJ2F1dG9jb21wbGV0ZScpKTsKICAgIH0KfQoKaWYgKCFcZnVuY3Rpb25fZXhpc3RzKCdQc3lcXGJpbicpKSB7CiAgICAvKioKICAgICAqIGBwc3lzaGAgY29tbWFuZCBsaW5lIGV4ZWN1dGFibGUuCiAgICAgKgogICAgICogQHJldHVybiBcQ2xvc3VyZQogICAgICovCiAgICBmdW5jdGlvbiBiaW4oKQogICAgewogICAgICAgIHJldHVybiBmdW5jdGlvbiAoKSB7CiAgICAgICAgICAgIGlmICghaXNzZXQoJF9TRVJWRVJbJ1BTWVNIX0lHTk9SRV9FTlYnXSkgfHwgISRfU0VSVkVSWydQU1lTSF9JR05PUkVfRU5WJ10pIHsKICAgICAgICAgICAgICAgIGlmIChkZWZpbmVkKCdISFZNX1ZFUlNJT05fSUQnKSAmJiBcSEhWTV9WRVJTSU9OX0lEIDwgMzE4MDApIHsKICAgICAgICAgICAgICAgICAgICBmd3JpdGUoU1RERVJSLCAnSEhWTSAzLjE4IG9yIGhpZ2hlciBpcyByZXF1aXJlZC4gWW91IGNhbiBzZXQgdGhlIGVudmlyb25tZW50IHZhcmlhYmxlIFBTWVNIX0lHTk9SRV9FTlY9MSB0byBvdmVycmlkZSB0aGlzIHJlc3RyaWN0aW9uIGFuZCBwcm9jZWVkIGFueXdheS4nIC4gUEhQX0VPTCk7CiAgICAgICAgICAgICAgICAgICAgZXhpdCgxKTsKICAgICAgICAgICAgICAgIH0KCiAgICAgICAgICAgICAgICBpZiAoZGVmaW5lZCgnSEhWTV9WRVJTSU9OX0lEJykgJiYgXEhIVk1fVkVSU0lPTl9JRCA+IDM5OTk5KSB7CiAgICAgICAgICAgICAgICAgICAgZndyaXRlKFNUREVSUiwgJ0hIVk0gNCBvciBoaWdoZXIgaXMgbm90IHN1cHBvcnRlZC4gWW91IGNhbiBzZXQgdGhlIGVudmlyb25tZW50IHZhcmlhYmxlIFBTWVNIX0lHTk9SRV9FTlY9MSB0byBvdmVycmlkZSB0aGlzIHJlc3RyaWN0aW9uIGFuZCBwcm9jZWVkIGFueXdheS4nIC4gUEhQX0VPTCk7CiAgICAgICAgICAgICAgICAgICAgZXhpdCgxKTsKICAgICAgICAgICAgICAgIH0KCiAgICAgICAgICAgICAgICBpZiAoXFBIUF9WRVJTSU9OX0lEIDwgNTA1MDkpIHsKICAgICAgICAgICAgICAgICAgICBmd3JpdGUoU1RERVJSLCAnUEhQIDUuNS45IG9yIGhpZ2hlciBpcyByZXF1aXJlZC4gWW91IGNhbiBzZXQgdGhlIGVudmlyb25tZW50IHZhcmlhYmxlIFBTWVNIX0lHTk9SRV9FTlY9MSB0byBvdmVycmlkZSB0aGlzIHJlc3RyaWN0aW9uIGFuZCBwcm9jZWVkIGFueXdheS4nIC4gUEhQX0VPTCk7CiAgICAgICAgICAgICAgICAgICAgZXhpdCgxKTsKICAgICAgICAgICAgICAgIH0KCiAgICAgICAgICAgICAgICBpZiAoXFBIUF9WRVJTSU9OX0lEID4gODk5OTkpIHsKICAgICAgICAgICAgICAgICAgICBmd3JpdGUoU1RERVJSLCAnUEhQIDkgb3IgaGlnaGVyIGlzIG5vdCBzdXBwb3J0ZWQuIFlvdSBjYW4gc2V0IHRoZSBlbnZpcm9ubWVudCB2YXJpYWJsZSBQU1lTSF9JR05PUkVfRU5WPTEgdG8gb3ZlcnJpZGUgdGhpcyByZXN0cmljdGlvbiBhbmQgcHJvY2VlZCBhbnl3YXkuJyAuIFBIUF9FT0wpOwogICAgICAgICAgICAgICAgICAgIGV4aXQoMSk7CiAgICAgICAgICAgICAgICB9CgogICAgICAgICAgICAgICAgaWYgKCFmdW5jdGlvbl9leGlzdHMoJ2pzb25fZW5jb2RlJykpIHsKICAgICAgICAgICAgICAgICAgICBmd3JpdGUoU1RERVJSLCAnVGhlIEpTT04gZXh0ZW5zaW9uIGlzIHJlcXVpcmVkLiBQbGVhc2UgaW5zdGFsbCBpdC4gWW91IGNhbiBzZXQgdGhlIGVudmlyb25tZW50IHZhcmlhYmxlIFBTWVNIX0lHTk9SRV9FTlY9MSB0byBvdmVycmlkZSB0aGlzIHJlc3RyaWN0aW9uIGFuZCBwcm9jZWVkIGFueXdheS4nIC4gUEhQX0VPTCk7CiAgICAgICAgICAgICAgICAgICAgZXhpdCgxKTsKICAgICAgICAgICAgICAgIH0KCiAgICAgICAgICAgICAgICBpZiAoIWZ1bmN0aW9uX2V4aXN0cygndG9rZW5fZ2V0X2FsbCcpKSB7CiAgICAgICAgICAgICAgICAgICAgZndyaXRlKFNUREVSUiwgJ1RoZSBUb2tlbml6ZXIgZXh0ZW5zaW9uIGlzIHJlcXVpcmVkLiBQbGVhc2UgaW5zdGFsbCBpdC4gWW91IGNhbiBzZXQgdGhlIGVudmlyb25tZW50IHZhcmlhYmxlIFBTWVNIX0lHTk9SRV9FTlY9MSB0byBvdmVycmlkZSB0aGlzIHJlc3RyaWN0aW9uIGFuZCBwcm9jZWVkIGFueXdheS4nIC4gUEhQX0VPTCk7CiAgICAgICAgICAgICAgICAgICAgZXhpdCgxKTsKICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgfQoKICAgICAgICAgICAgJHVzYWdlRXhjZXB0aW9uID0gbnVsbDsKCiAgICAgICAgICAgICRpbnB1dCA9IG5ldyBBcmd2SW5wdXQoKTsKICAgICAgICAgICAgdHJ5IHsKICAgICAgICAgICAgICAgICRpbnB1dC0+YmluZChuZXcgSW5wdXREZWZpbml0aW9uKFxhcnJheV9tZXJnZShDb25maWd1cmF0aW9uOjpnZXRJbnB1dE9wdGlvbnMoKSwgWwogICAgICAgICAgICAgICAgICAgIG5ldyBJbnB1dE9wdGlvbignaGVscCcsICAgICdoJywgSW5wdXRPcHRpb246OlZBTFVFX05PTkUpLAogICAgICAgICAgICAgICAgICAgIG5ldyBJbnB1dE9wdGlvbigndmVyc2lvbicsICdWJywgSW5wdXRPcHRpb246OlZBTFVFX05PTkUpLAoKICAgICAgICAgICAgICAgICAgICBuZXcgSW5wdXRBcmd1bWVudCgnaW5jbHVkZScsIElucHV0QXJndW1lbnQ6OklTX0FSUkFZKSwKICAgICAgICAgICAgICAgIF0pKSk7CiAgICAgICAgICAgIH0gY2F0Y2ggKFxSdW50aW1lRXhjZXB0aW9uICRlKSB7CiAgICAgICAgICAgICAgICAkdXNhZ2VFeGNlcHRpb24gPSAkZTsKICAgICAgICAgICAgfQoKICAgICAgICAgICAgdHJ5IHsKICAgICAgICAgICAgICAgICRjb25maWcgPSBDb25maWd1cmF0aW9uOjpmcm9tSW5wdXQoJGlucHV0KTsKICAgICAgICAgICAgfSBjYXRjaCAoXEludmFsaWRBcmd1bWVudEV4Y2VwdGlvbiAkZSkgewogICAgICAgICAgICAgICAgJHVzYWdlRXhjZXB0aW9uID0gJGU7CiAgICAgICAgICAgIH0KCiAgICAgICAgICAgIC8vIEhhbmRsZSAtLWhlbHAKICAgICAgICAgICAgaWYgKCR1c2FnZUV4Y2VwdGlvbiAhPT0gbnVsbCB8fCAkaW5wdXQtPmdldE9wdGlvbignaGVscCcpKSB7CiAgICAgICAgICAgICAgICBpZiAoJHVzYWdlRXhjZXB0aW9uICE9PSBudWxsKSB7CiAgICAgICAgICAgICAgICAgICAgZWNobyAkdXNhZ2VFeGNlcHRpb24tPmdldE1lc3NhZ2UoKSAuIFBIUF9FT0wgLiBQSFBfRU9MOwogICAgICAgICAgICAgICAgfQoKICAgICAgICAgICAgICAgICR2ZXJzaW9uID0gU2hlbGw6OmdldFZlcnNpb25IZWFkZXIoZmFsc2UpOwogICAgICAgICAgICAgICAgJGFyZ3YgICAgPSBpc3NldCgkX1NFUlZFUlsnYXJndiddKSA/ICRfU0VSVkVSWydhcmd2J10gOiBbXTsKICAgICAgICAgICAgICAgICRuYW1lICAgID0gJGFyZ3YgPyBcYmFzZW5hbWUoXHJlc2V0KCRhcmd2KSkgOiAncHN5c2gnOwoKICAgICAgICAgICAgICAgIGVjaG8gPDw8RU9MCiR2ZXJzaW9uCgpVc2FnZToKICAkbmFtZSBbLS12ZXJzaW9uXSBbLS1oZWxwXSBbZmlsZXMuLi5dCgpPcHRpb25zOgogIC1oLCAtLWhlbHAgICAgICAgICAgICBEaXNwbGF5IHRoaXMgaGVscCBtZXNzYWdlLgogIC1jLCAtLWNvbmZpZyBGSUxFICAgICBVc2UgYW4gYWx0ZXJuYXRlIFBzeVNIIGNvbmZpZyBmaWxlIGxvY2F0aW9uLgogICAgICAtLWN3ZCBQQVRIICAgICAgICBVc2UgYW4gYWx0ZXJuYXRlIHdvcmtpbmcgZGlyZWN0b3J5LgogIC1WLCAtLXZlcnNpb24gICAgICAgICBEaXNwbGF5IHRoZSBQc3lTSCB2ZXJzaW9uLgogICAgICAtLWNvbG9yICAgICAgICAgICBGb3JjZSBjb2xvcnMgaW4gb3V0cHV0LgogICAgICAtLW5vLWNvbG9yICAgICAgICBEaXNhYmxlIGNvbG9ycyBpbiBvdXRwdXQuCiAgLWksIC0taW50ZXJhY3RpdmUgICAgIEZvcmNlIFBzeVNIIHRvIHJ1biBpbiBpbnRlcmFjdGl2ZSBtb2RlLgogIC1uLCAtLW5vLWludGVyYWN0aXZlICBSdW4gUHN5U0ggd2l0aG91dCBpbnRlcmFjdGl2ZSBpbnB1dC4gUmVxdWlyZXMgaW5wdXQgZnJvbSBzdGRpbi4KICAtciwgLS1yYXctb3V0cHV0ICAgICAgUHJpbnQgdmFyX2V4cG9ydC1zdHlsZSByZXR1cm4gdmFsdWVzIChmb3Igbm9uLWludGVyYWN0aXZlIGlucHV0KQogIC1xLCAtLXF1aWV0ICAgICAgICAgICBTaGhoaGhoLgogIC12fHZ2fHZ2diwgLS12ZXJib3NlICBJbmNyZWFzZSB0aGUgdmVyYm9zaXR5IG9mIG1lc3NhZ2VzLgoKRU9MOwogICAgICAgICAgICAgICAgZXhpdCgkdXNhZ2VFeGNlcHRpb24gPT09IG51bGwgPyAwIDogMSk7CiAgICAgICAgICAgIH0KCiAgICAgICAgICAgIC8vIEhhbmRsZSAtLXZlcnNpb24KICAgICAgICAgICAgaWYgKCRpbnB1dC0+Z2V0T3B0aW9uKCd2ZXJzaW9uJykpIHsKICAgICAgICAgICAgICAgIGVjaG8gU2hlbGw6OmdldFZlcnNpb25IZWFkZXIoJGNvbmZpZy0+dXNlVW5pY29kZSgpKSAuIFBIUF9FT0w7CiAgICAgICAgICAgICAgICBleGl0KDApOwogICAgICAgICAgICB9CgogICAgICAgICAgICAkc2hlbGwgPSBuZXcgU2hlbGwoJGNvbmZpZyk7CgogICAgICAgICAgICAvLyBQYXNzIGFkZGl0aW9uYWwgYXJndW1lbnRzIHRvIFNoZWxsIGFzICdpbmNsdWRlcycKICAgICAgICAgICAgJHNoZWxsLT5zZXRJbmNsdWRlcygkaW5wdXQtPmdldEFyZ3VtZW50KCdpbmNsdWRlJykpOwoKICAgICAgICAgICAgdHJ5IHsKICAgICAgICAgICAgICAgIC8vIEFuZCBnbyEKICAgICAgICAgICAgICAgICRzaGVsbC0+cnVuKCk7CiAgICAgICAgICAgIH0gY2F0Y2ggKFxFeGNlcHRpb24gJGUpIHsKICAgICAgICAgICAgICAgIGZ3cml0ZShTVERFUlIsICRlLT5nZXRNZXNzYWdlKCkgLiBQSFBfRU9MKTsKCiAgICAgICAgICAgICAgICAvLyBAdG9kbyB0aGlzIHRyaWdnZXJzIHRoZSAiZXhpdGVkIHVuZXhwZWN0ZWRseSIgbG9naWMgaW4gdGhlCiAgICAgICAgICAgICAgICAvLyBGb3JraW5nTG9vcCwgc28gd2UgY2FuJ3QgZXhpdCgxKSBhZnRlciBzdGFydGluZyB0aGUgc2hlbGwuLi4KICAgICAgICAgICAgICAgIC8vIGZpeCB0aGlzIDopCgogICAgICAgICAgICAgICAgLy8gZXhpdCgxKTsKICAgICAgICAgICAgfQogICAgICAgIH07CiAgICB9Cn0KIjtzOjQ1OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxGaWxlAG5hbWVzcGFjZXMiO2E6MTp7czo0OiJcUHN5IjtPOjMwOiJwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cRnFzZW4iOjI6e3M6Mzc6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cRnFzZW4AZnFzZW4iO3M6NDoiXFBzeSI7czozNjoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxGcXNlbgBuYW1lIjtzOjM6IlBzeSI7fX1zOjQzOiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxGaWxlAGluY2x1ZGVzIjthOjA6e31zOjQ0OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxGaWxlAGZ1bmN0aW9ucyI7YTo0OntzOjk6IlxQc3lcc2goKSI7TzozODoicGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxGdW5jdGlvbl8iOjU6e3M6NDU6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXEZ1bmN0aW9uXwBmcXNlbiI7TzozMDoicGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXEZxc2VuIjoyOntzOjM3OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXEZxc2VuAGZxc2VuIjtzOjk6IlxQc3lcc2goKSI7czozNjoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxGcXNlbgBuYW1lIjtzOjI6InNoIjt9czo0OToiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcRnVuY3Rpb25fAGFyZ3VtZW50cyI7YTowOnt9czo0ODoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcRnVuY3Rpb25fAGRvY0Jsb2NrIjtPOjMzOiJwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cRG9jQmxvY2siOjc6e3M6NDI6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cRG9jQmxvY2sAc3VtbWFyeSI7czo1NDoiQ29tbWFuZCB0byByZXR1cm4gdGhlIGV2YWwtYWJsZSBjb2RlIHRvIHN0YXJ0dXAgUHN5U0guIjtzOjQ2OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXERvY0Jsb2NrAGRlc2NyaXB0aW9uIjtPOjQ1OiJwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cRG9jQmxvY2tcRGVzY3JpcHRpb24iOjI6e3M6NTk6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cRG9jQmxvY2tcRGVzY3JpcHRpb24AYm9keVRlbXBsYXRlIjtzOjE2OiJldmFsKFxQc3lcc2goKSk7IjtzOjUxOiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXERvY0Jsb2NrXERlc2NyaXB0aW9uAHRhZ3MiO2E6MDp7fX1zOjM5OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXERvY0Jsb2NrAHRhZ3MiO2E6MTp7aTowO086NDY6InBocERvY3VtZW50b3JcUmVmbGVjdGlvblxEb2NCbG9ja1xUYWdzXFJldHVybl8iOjM6e3M6NzoiACoAdHlwZSI7TzozODoicGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFR5cGVzXFN0cmluZ18iOjA6e31zOjc6IgAqAG5hbWUiO3M6NjoicmV0dXJuIjtzOjE0OiIAKgBkZXNjcmlwdGlvbiI7Tzo0NToicGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXERvY0Jsb2NrXERlc2NyaXB0aW9uIjoyOntzOjU5OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXERvY0Jsb2NrXERlc2NyaXB0aW9uAGJvZHlUZW1wbGF0ZSI7czowOiIiO3M6NTE6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cRG9jQmxvY2tcRGVzY3JpcHRpb24AdGFncyI7YTowOnt9fX19czo0MjoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxEb2NCbG9jawBjb250ZXh0IjtPOjM4OiJwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cVHlwZXNcQ29udGV4dCI6Mjp7czo0OToiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxUeXBlc1xDb250ZXh0AG5hbWVzcGFjZSI7czozOiJQc3kiO3M6NTY6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cVHlwZXNcQ29udGV4dABuYW1lc3BhY2VBbGlhc2VzIjthOjc6e3M6MTM6IlByb2Nlc3NGb3JrZXIiO3M6MzE6IlBzeVxFeGVjdXRpb25Mb29wXFByb2Nlc3NGb3JrZXIiO3M6MTM6IkdpdEh1YkNoZWNrZXIiO3M6MzI6IlBzeVxWZXJzaW9uVXBkYXRlclxHaXRIdWJDaGVja2VyIjtzOjk6IkFyZ3ZJbnB1dCI7czo0MToiU3ltZm9ueVxDb21wb25lbnRcQ29uc29sZVxJbnB1dFxBcmd2SW5wdXQiO3M6MTM6IklucHV0QXJndW1lbnQiO3M6NDU6IlN5bWZvbnlcQ29tcG9uZW50XENvbnNvbGVcSW5wdXRcSW5wdXRBcmd1bWVudCI7czoxNToiSW5wdXREZWZpbml0aW9uIjtzOjQ3OiJTeW1mb255XENvbXBvbmVudFxDb25zb2xlXElucHV0XElucHV0RGVmaW5pdGlvbiI7czoxMToiSW5wdXRPcHRpb24iO3M6NDM6IlN5bWZvbnlcQ29tcG9uZW50XENvbnNvbGVcSW5wdXRcSW5wdXRPcHRpb24iO3M6MzoiWGRnIjtzOjE0OiJYZGdCYXNlRGlyXFhkZyI7fX1zOjQzOiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXERvY0Jsb2NrAGxvY2F0aW9uIjtPOjMzOiJwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cTG9jYXRpb24iOjI6e3M6NDU6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cTG9jYXRpb24AbGluZU51bWJlciI7aToyMztzOjQ3OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXExvY2F0aW9uAGNvbHVtbk51bWJlciI7aTowO31zOjUwOiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXERvY0Jsb2NrAGlzVGVtcGxhdGVTdGFydCI7YjowO3M6NDg6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cRG9jQmxvY2sAaXNUZW1wbGF0ZUVuZCI7YjowO31zOjQ4OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxGdW5jdGlvbl8AbG9jYXRpb24iO086MzM6InBocERvY3VtZW50b3JcUmVmbGVjdGlvblxMb2NhdGlvbiI6Mjp7czo0NToiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxMb2NhdGlvbgBsaW5lTnVtYmVyIjtpOjMwO3M6NDc6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cTG9jYXRpb24AY29sdW1uTnVtYmVyIjtpOjA7fXM6NTA6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXEZ1bmN0aW9uXwByZXR1cm5UeXBlIjtPOjM3OiJwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cVHlwZXNcTWl4ZWRfIjowOnt9fXM6MTI6IlxQc3lcZGVidWcoKSI7TzozODoicGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxGdW5jdGlvbl8iOjU6e3M6NDU6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXEZ1bmN0aW9uXwBmcXNlbiI7TzozMDoicGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXEZxc2VuIjoyOntzOjM3OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXEZxc2VuAGZxc2VuIjtzOjEyOiJcUHN5XGRlYnVnKCkiO3M6MzY6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cRnFzZW4AbmFtZSI7czo1OiJkZWJ1ZyI7fXM6NDk6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXEZ1bmN0aW9uXwBhcmd1bWVudHMiO2E6Mjp7aTowO086Mzc6InBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcQXJndW1lbnQiOjU6e3M6NDM6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXEFyZ3VtZW50AG5hbWUiO3M6NDoidmFycyI7czo0MzoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcQXJndW1lbnQAdHlwZSI7TzozNzoicGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFR5cGVzXEFycmF5XyI6Mzp7czoxMjoiACoAdmFsdWVUeXBlIjtPOjM3OiJwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cVHlwZXNcTWl4ZWRfIjowOnt9czoxMDoiACoAa2V5VHlwZSI7TjtzOjE3OiIAKgBkZWZhdWx0S2V5VHlwZSI7TzozOToicGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFR5cGVzXENvbXBvdW5kIjoyOntzOjUyOiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFR5cGVzXEFnZ3JlZ2F0ZWRUeXBlAHR5cGVzIjthOjI6e2k6MDtPOjM4OiJwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cVHlwZXNcU3RyaW5nXyI6MDp7fWk6MTtPOjM4OiJwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cVHlwZXNcSW50ZWdlciI6MDp7fX1zOjUyOiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFR5cGVzXEFnZ3JlZ2F0ZWRUeXBlAHRva2VuIjtzOjE6InwiO319czo0NjoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcQXJndW1lbnQAZGVmYXVsdCI7czoyOiJbXSI7czo1MDoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcQXJndW1lbnQAYnlSZWZlcmVuY2UiO2I6MDtzOjQ5OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxBcmd1bWVudABpc1ZhcmlhZGljIjtiOjA7fWk6MTtPOjM3OiJwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXEFyZ3VtZW50Ijo1OntzOjQzOiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxBcmd1bWVudABuYW1lIjtzOjY6ImJpbmRUbyI7czo0MzoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcQXJndW1lbnQAdHlwZSI7TzozNzoicGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFR5cGVzXE1peGVkXyI6MDp7fXM6NDY6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXEFyZ3VtZW50AGRlZmF1bHQiO3M6NDoibnVsbCI7czo1MDoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcQXJndW1lbnQAYnlSZWZlcmVuY2UiO2I6MDtzOjQ5OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxBcmd1bWVudABpc1ZhcmlhZGljIjtiOjA7fX1zOjQ4OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxGdW5jdGlvbl8AZG9jQmxvY2siO086MzM6InBocERvY3VtZW50b3JcUmVmbGVjdGlvblxEb2NCbG9jayI6Nzp7czo0MjoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxEb2NCbG9jawBzdW1tYXJ5IjtzOjQ0OiJJbnZva2UgYSBQc3kgU2hlbGwgZnJvbSB0aGUgY3VycmVudCBjb250ZXh0LiI7czo0NjoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxEb2NCbG9jawBkZXNjcmlwdGlvbiI7Tzo0NToicGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXERvY0Jsb2NrXERlc2NyaXB0aW9uIjoyOntzOjU5OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXERvY0Jsb2NrXERlc2NyaXB0aW9uAGJvZHlUZW1wbGF0ZSI7czoxMDIzOiJGb3IgZXhhbXBsZToKCiAgICBmb3JlYWNoICgkaXRlbXMgYXMgJGl0ZW0pIHsKICAgICAgICBcUHN5XGRlYnVnKGdldF9kZWZpbmVkX3ZhcnMoKSk7CiAgICB9CgpJZiB5b3Ugd291bGQgbGlrZSB5b3VyIHNoZWxsIGludGVyYWN0aW9uIHRvIGFmZmVjdCB0aGUgc3RhdGUgb2YgdGhlCmN1cnJlbnQgY29udGV4dCwgeW91IGNhbiBleHRyYWN0KCkgdGhlIHZhbHVlcyByZXR1cm5lZCBmcm9tIHRoaXMgY2FsbDoKCiAgICBmb3JlYWNoICgkaXRlbXMgYXMgJGl0ZW0pIHsKICAgICAgICBleHRyYWN0KFxQc3lcZGVidWcoZ2V0X2RlZmluZWRfdmFycygpKSk7CiAgICAgICAgdmFyX2R1bXAoJGl0ZW0pOyAvLyB3aWxsIGJlIHdoYXRldmVyIHlvdSBzZXQgJGl0ZW0gdG8gaW4gUHN5IFNoZWxsCiAgICB9CgpPcHRpb25hbGx5LCBzdXBwbHkgYW4gb2JqZWN0IGFzIHRoZSBgJGJpbmRUb2AgcGFyYW1ldGVyLiBUaGlzIGRldGVybWluZXMKdGhlIHZhbHVlIGAkdGhpc2Agd2lsbCBoYXZlIGluIHRoZSBzaGVsbCwgYW5kIHNldHMgdXAgY2xhc3Mgc2NvcGUgc28gdGhhdApwcml2YXRlIGFuZCBwcm90ZWN0ZWQgbWVtYmVycyBhcmUgYWNjZXNzaWJsZToKCiAgICBjbGFzcyBGb28gewogICAgICAgIGZ1bmN0aW9uIGJhcigpIHsKICAgICAgICAgICAgXFBzeVxkZWJ1ZyhnZXRfZGVmaW5lZF92YXJzKCksICR0aGlzKTsKICAgICAgICB9CiAgICB9CgpGb3IgdGhlIHN0YXRpYyBlcXVpdmFsZW50LCBwYXNzIGEgY2xhc3MgbmFtZSBhcyB0aGUgYCRiaW5kVG9gIHBhcmFtZXRlci4KVGhpcyBtYWtlcyBgc2VsZmAgd29yayBpbiB0aGUgc2hlbGwsIGFuZCBzZXRzIHVwIHN0YXRpYyBzY29wZSBzbyB0aGF0CnByaXZhdGUgYW5kIHByb3RlY3RlZCBzdGF0aWMgbWVtYmVycyBhcmUgYWNjZXNzaWJsZToKCiAgICBjbGFzcyBGb28gewogICAgICAgIHN0YXRpYyBmdW5jdGlvbiBiYXIoKSB7CiAgICAgICAgICAgIFxQc3lcZGVidWcoZ2V0X2RlZmluZWRfdmFycygpLCBnZXRfY2FsbGVkX2NsYXNzKCkpOwogICAgICAgIH0KICAgIH0iO3M6NTE6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cRG9jQmxvY2tcRGVzY3JpcHRpb24AdGFncyI7YTowOnt9fXM6Mzk6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cRG9jQmxvY2sAdGFncyI7YTozOntpOjA7Tzo0NDoicGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXERvY0Jsb2NrXFRhZ3NcUGFyYW0iOjY6e3M6NTg6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cRG9jQmxvY2tcVGFnc1xQYXJhbQB2YXJpYWJsZU5hbWUiO3M6NDoidmFycyI7czo1NjoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxEb2NCbG9ja1xUYWdzXFBhcmFtAGlzVmFyaWFkaWMiO2I6MDtzOjU3OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXERvY0Jsb2NrXFRhZ3NcUGFyYW0AaXNSZWZlcmVuY2UiO2I6MDtzOjc6IgAqAHR5cGUiO086Mzc6InBocERvY3VtZW50b3JcUmVmbGVjdGlvblxUeXBlc1xBcnJheV8iOjM6e3M6MTI6IgAqAHZhbHVlVHlwZSI7TzozNzoicGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFR5cGVzXE1peGVkXyI6MDp7fXM6MTA6IgAqAGtleVR5cGUiO047czoxNzoiACoAZGVmYXVsdEtleVR5cGUiO086Mzk6InBocERvY3VtZW50b3JcUmVmbGVjdGlvblxUeXBlc1xDb21wb3VuZCI6Mjp7czo1MjoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxUeXBlc1xBZ2dyZWdhdGVkVHlwZQB0eXBlcyI7YToyOntpOjA7TzozODoicGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFR5cGVzXFN0cmluZ18iOjA6e31pOjE7TzozODoicGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFR5cGVzXEludGVnZXIiOjA6e319czo1MjoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxUeXBlc1xBZ2dyZWdhdGVkVHlwZQB0b2tlbiI7czoxOiJ8Ijt9fXM6NzoiACoAbmFtZSI7czo1OiJwYXJhbSI7czoxNDoiACoAZGVzY3JpcHRpb24iO086NDU6InBocERvY3VtZW50b3JcUmVmbGVjdGlvblxEb2NCbG9ja1xEZXNjcmlwdGlvbiI6Mjp7czo1OToiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxEb2NCbG9ja1xEZXNjcmlwdGlvbgBib2R5VGVtcGxhdGUiO3M6NTQ6IlNjb3BlIHZhcmlhYmxlcyBmcm9tIHRoZSBjYWxsaW5nIGNvbnRleHQgKGRlZmF1bHQ6IFtdKSI7czo1MToiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxEb2NCbG9ja1xEZXNjcmlwdGlvbgB0YWdzIjthOjA6e319fWk6MTtPOjQ0OiJwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cRG9jQmxvY2tcVGFnc1xQYXJhbSI6Njp7czo1ODoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxEb2NCbG9ja1xUYWdzXFBhcmFtAHZhcmlhYmxlTmFtZSI7czo2OiJiaW5kVG8iO3M6NTY6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cRG9jQmxvY2tcVGFnc1xQYXJhbQBpc1ZhcmlhZGljIjtiOjA7czo1NzoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxEb2NCbG9ja1xUYWdzXFBhcmFtAGlzUmVmZXJlbmNlIjtiOjA7czo3OiIAKgB0eXBlIjtPOjM5OiJwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cVHlwZXNcQ29tcG91bmQiOjI6e3M6NTI6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cVHlwZXNcQWdncmVnYXRlZFR5cGUAdHlwZXMiO2E6Mjp7aTowO086Mzg6InBocERvY3VtZW50b3JcUmVmbGVjdGlvblxUeXBlc1xPYmplY3RfIjoxOntzOjQ1OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFR5cGVzXE9iamVjdF8AZnFzZW4iO047fWk6MTtPOjM4OiJwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cVHlwZXNcU3RyaW5nXyI6MDp7fX1zOjUyOiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFR5cGVzXEFnZ3JlZ2F0ZWRUeXBlAHRva2VuIjtzOjE6InwiO31zOjc6IgAqAG5hbWUiO3M6NToicGFyYW0iO3M6MTQ6IgAqAGRlc2NyaXB0aW9uIjtPOjQ1OiJwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cRG9jQmxvY2tcRGVzY3JpcHRpb24iOjI6e3M6NTk6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cRG9jQmxvY2tcRGVzY3JpcHRpb24AYm9keVRlbXBsYXRlIjtzOjU2OiJCb3VuZCBvYmplY3QgKCR0aGlzKSBvciBjbGFzcyAoc2VsZikgdmFsdWUgZm9yIHRoZSBzaGVsbCI7czo1MToiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxEb2NCbG9ja1xEZXNjcmlwdGlvbgB0YWdzIjthOjA6e319fWk6MjtPOjQ2OiJwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cRG9jQmxvY2tcVGFnc1xSZXR1cm5fIjozOntzOjc6IgAqAHR5cGUiO086Mzc6InBocERvY3VtZW50b3JcUmVmbGVjdGlvblxUeXBlc1xBcnJheV8iOjM6e3M6MTI6IgAqAHZhbHVlVHlwZSI7TzozNzoicGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFR5cGVzXE1peGVkXyI6MDp7fXM6MTA6IgAqAGtleVR5cGUiO047czoxNzoiACoAZGVmYXVsdEtleVR5cGUiO086Mzk6InBocERvY3VtZW50b3JcUmVmbGVjdGlvblxUeXBlc1xDb21wb3VuZCI6Mjp7czo1MjoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxUeXBlc1xBZ2dyZWdhdGVkVHlwZQB0eXBlcyI7YToyOntpOjA7TzozODoicGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFR5cGVzXFN0cmluZ18iOjA6e31pOjE7TzozODoicGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFR5cGVzXEludGVnZXIiOjA6e319czo1MjoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxUeXBlc1xBZ2dyZWdhdGVkVHlwZQB0b2tlbiI7czoxOiJ8Ijt9fXM6NzoiACoAbmFtZSI7czo2OiJyZXR1cm4iO3M6MTQ6IgAqAGRlc2NyaXB0aW9uIjtPOjQ1OiJwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cRG9jQmxvY2tcRGVzY3JpcHRpb24iOjI6e3M6NTk6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cRG9jQmxvY2tcRGVzY3JpcHRpb24AYm9keVRlbXBsYXRlIjtzOjQxOiJTY29wZSB2YXJpYWJsZXMgZnJvbSB0aGUgZGVidWdnZXIgc2Vzc2lvbiI7czo1MToiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxEb2NCbG9ja1xEZXNjcmlwdGlvbgB0YWdzIjthOjA6e319fX1zOjQyOiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXERvY0Jsb2NrAGNvbnRleHQiO3I6MzA7czo0MzoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxEb2NCbG9jawBsb2NhdGlvbiI7TzozMzoicGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXExvY2F0aW9uIjoyOntzOjQ1OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXExvY2F0aW9uAGxpbmVOdW1iZXIiO2k6Mzc7czo0NzoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxMb2NhdGlvbgBjb2x1bW5OdW1iZXIiO2k6MDt9czo1MDoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxEb2NCbG9jawBpc1RlbXBsYXRlU3RhcnQiO2I6MDtzOjQ4OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXERvY0Jsb2NrAGlzVGVtcGxhdGVFbmQiO2I6MDt9czo0ODoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcRnVuY3Rpb25fAGxvY2F0aW9uIjtPOjMzOiJwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cTG9jYXRpb24iOjI6e3M6NDU6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cTG9jYXRpb24AbGluZU51bWJlciI7aTo3OTtzOjQ3OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXExvY2F0aW9uAGNvbHVtbk51bWJlciI7aTowO31zOjUwOiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxGdW5jdGlvbl8AcmV0dXJuVHlwZSI7TzozNzoicGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFR5cGVzXE1peGVkXyI6MDp7fX1zOjExOiJcUHN5XGluZm8oKSI7TzozODoicGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxGdW5jdGlvbl8iOjU6e3M6NDU6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXEZ1bmN0aW9uXwBmcXNlbiI7TzozMDoicGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXEZxc2VuIjoyOntzOjM3OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXEZxc2VuAGZxc2VuIjtzOjExOiJcUHN5XGluZm8oKSI7czozNjoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxGcXNlbgBuYW1lIjtzOjQ6ImluZm8iO31zOjQ5OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxGdW5jdGlvbl8AYXJndW1lbnRzIjthOjE6e2k6MDtPOjM3OiJwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXEFyZ3VtZW50Ijo1OntzOjQzOiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxBcmd1bWVudABuYW1lIjtzOjY6ImNvbmZpZyI7czo0MzoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcQXJndW1lbnQAdHlwZSI7TzozODoicGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFR5cGVzXE9iamVjdF8iOjE6e3M6NDU6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cVHlwZXNcT2JqZWN0XwBmcXNlbiI7TzozMDoicGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXEZxc2VuIjoyOntzOjM3OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXEZxc2VuAGZxc2VuIjtzOjE4OiJcUHN5XENvbmZpZ3VyYXRpb24iO3M6MzY6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cRnFzZW4AbmFtZSI7czoxMzoiQ29uZmlndXJhdGlvbiI7fX1zOjQ2OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxBcmd1bWVudABkZWZhdWx0IjtzOjQ6Im51bGwiO3M6NTA6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXEFyZ3VtZW50AGJ5UmVmZXJlbmNlIjtiOjA7czo0OToiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcQXJndW1lbnQAaXNWYXJpYWRpYyI7YjowO319czo0ODoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcRnVuY3Rpb25fAGRvY0Jsb2NrIjtPOjMzOiJwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cRG9jQmxvY2siOjc6e3M6NDI6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cRG9jQmxvY2sAc3VtbWFyeSI7czo4NDoiR2V0IGEgYnVuY2ggb2YgZGVidWdnaW5nIGluZm8gYWJvdXQgdGhlIGN1cnJlbnQgUHN5U0ggZW52aXJvbm1lbnQgYW5kCmNvbmZpZ3VyYXRpb24uIjtzOjQ2OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXERvY0Jsb2NrAGRlc2NyaXB0aW9uIjtPOjQ1OiJwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cRG9jQmxvY2tcRGVzY3JpcHRpb24iOjI6e3M6NTk6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cRG9jQmxvY2tcRGVzY3JpcHRpb24AYm9keVRlbXBsYXRlIjtzOjEzOToiSWYgYSBDb25maWd1cmF0aW9uIHBhcmFtIGlzIHBhc3NlZCwgdGhhdCBjb25maWd1cmF0aW9uIGlzIHN0b3JlZCBhbmQKdXNlZCBmb3IgdGhlIGN1cnJlbnQgc2hlbGwgc2Vzc2lvbiwgYW5kIG5vIGRlYnVnZ2luZyBpbmZvIGlzIHJldHVybmVkLiI7czo1MToiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxEb2NCbG9ja1xEZXNjcmlwdGlvbgB0YWdzIjthOjA6e319czozOToiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxEb2NCbG9jawB0YWdzIjthOjI6e2k6MDtPOjQ0OiJwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cRG9jQmxvY2tcVGFnc1xQYXJhbSI6Njp7czo1ODoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxEb2NCbG9ja1xUYWdzXFBhcmFtAHZhcmlhYmxlTmFtZSI7czo2OiJjb25maWciO3M6NTY6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cRG9jQmxvY2tcVGFnc1xQYXJhbQBpc1ZhcmlhZGljIjtiOjA7czo1NzoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxEb2NCbG9ja1xUYWdzXFBhcmFtAGlzUmVmZXJlbmNlIjtiOjA7czo3OiIAKgB0eXBlIjtPOjM5OiJwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cVHlwZXNcQ29tcG91bmQiOjI6e3M6NTI6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cVHlwZXNcQWdncmVnYXRlZFR5cGUAdHlwZXMiO2E6Mjp7aTowO086Mzg6InBocERvY3VtZW50b3JcUmVmbGVjdGlvblxUeXBlc1xPYmplY3RfIjoxOntzOjQ1OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFR5cGVzXE9iamVjdF8AZnFzZW4iO086MzA6InBocERvY3VtZW50b3JcUmVmbGVjdGlvblxGcXNlbiI6Mjp7czozNzoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxGcXNlbgBmcXNlbiI7czoxODoiXFBzeVxDb25maWd1cmF0aW9uIjtzOjM2OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXEZxc2VuAG5hbWUiO3M6MTM6IkNvbmZpZ3VyYXRpb24iO319aToxO086MzY6InBocERvY3VtZW50b3JcUmVmbGVjdGlvblxUeXBlc1xOdWxsXyI6MDp7fX1zOjUyOiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFR5cGVzXEFnZ3JlZ2F0ZWRUeXBlAHRva2VuIjtzOjE6InwiO31zOjc6IgAqAG5hbWUiO3M6NToicGFyYW0iO3M6MTQ6IgAqAGRlc2NyaXB0aW9uIjtPOjQ1OiJwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cRG9jQmxvY2tcRGVzY3JpcHRpb24iOjI6e3M6NTk6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cRG9jQmxvY2tcRGVzY3JpcHRpb24AYm9keVRlbXBsYXRlIjtzOjA6IiI7czo1MToiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxEb2NCbG9ja1xEZXNjcmlwdGlvbgB0YWdzIjthOjA6e319fWk6MTtPOjQ2OiJwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cRG9jQmxvY2tcVGFnc1xSZXR1cm5fIjozOntzOjc6IgAqAHR5cGUiO086Mzk6InBocERvY3VtZW50b3JcUmVmbGVjdGlvblxUeXBlc1xDb21wb3VuZCI6Mjp7czo1MjoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxUeXBlc1xBZ2dyZWdhdGVkVHlwZQB0eXBlcyI7YToyOntpOjA7TzozNzoicGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFR5cGVzXEFycmF5XyI6Mzp7czoxMjoiACoAdmFsdWVUeXBlIjtPOjM3OiJwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cVHlwZXNcTWl4ZWRfIjowOnt9czoxMDoiACoAa2V5VHlwZSI7TjtzOjE3OiIAKgBkZWZhdWx0S2V5VHlwZSI7TzozOToicGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFR5cGVzXENvbXBvdW5kIjoyOntzOjUyOiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFR5cGVzXEFnZ3JlZ2F0ZWRUeXBlAHR5cGVzIjthOjI6e2k6MDtPOjM4OiJwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cVHlwZXNcU3RyaW5nXyI6MDp7fWk6MTtPOjM4OiJwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cVHlwZXNcSW50ZWdlciI6MDp7fX1zOjUyOiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFR5cGVzXEFnZ3JlZ2F0ZWRUeXBlAHRva2VuIjtzOjE6InwiO319aToxO086MzY6InBocERvY3VtZW50b3JcUmVmbGVjdGlvblxUeXBlc1xOdWxsXyI6MDp7fX1zOjUyOiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFR5cGVzXEFnZ3JlZ2F0ZWRUeXBlAHRva2VuIjtzOjE6InwiO31zOjc6IgAqAG5hbWUiO3M6NjoicmV0dXJuIjtzOjE0OiIAKgBkZXNjcmlwdGlvbiI7Tzo0NToicGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXERvY0Jsb2NrXERlc2NyaXB0aW9uIjoyOntzOjU5OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXERvY0Jsb2NrXERlc2NyaXB0aW9uAGJvZHlUZW1wbGF0ZSI7czowOiIiO3M6NTE6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cRG9jQmxvY2tcRGVzY3JpcHRpb24AdGFncyI7YTowOnt9fX19czo0MjoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxEb2NCbG9jawBjb250ZXh0IjtyOjMwO3M6NDM6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cRG9jQmxvY2sAbG9jYXRpb24iO086MzM6InBocERvY3VtZW50b3JcUmVmbGVjdGlvblxMb2NhdGlvbiI6Mjp7czo0NToiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxMb2NhdGlvbgBsaW5lTnVtYmVyIjtpOjEwNjtzOjQ3OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXExvY2F0aW9uAGNvbHVtbk51bWJlciI7aTowO31zOjUwOiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXERvY0Jsb2NrAGlzVGVtcGxhdGVTdGFydCI7YjowO3M6NDg6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cRG9jQmxvY2sAaXNUZW1wbGF0ZUVuZCI7YjowO31zOjQ4OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxGdW5jdGlvbl8AbG9jYXRpb24iO086MzM6InBocERvY3VtZW50b3JcUmVmbGVjdGlvblxMb2NhdGlvbiI6Mjp7czo0NToiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxMb2NhdGlvbgBsaW5lTnVtYmVyIjtpOjExNztzOjQ3OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXExvY2F0aW9uAGNvbHVtbk51bWJlciI7aTowO31zOjUwOiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxGdW5jdGlvbl8AcmV0dXJuVHlwZSI7TzozNzoicGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFR5cGVzXE1peGVkXyI6MDp7fX1zOjEwOiJcUHN5XGJpbigpIjtPOjM4OiJwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXEZ1bmN0aW9uXyI6NTp7czo0NToiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcRnVuY3Rpb25fAGZxc2VuIjtPOjMwOiJwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cRnFzZW4iOjI6e3M6Mzc6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cRnFzZW4AZnFzZW4iO3M6MTA6IlxQc3lcYmluKCkiO3M6MzY6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cRnFzZW4AbmFtZSI7czozOiJiaW4iO31zOjQ5OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxGdW5jdGlvbl8AYXJndW1lbnRzIjthOjA6e31zOjQ4OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxGdW5jdGlvbl8AZG9jQmxvY2siO086MzM6InBocERvY3VtZW50b3JcUmVmbGVjdGlvblxEb2NCbG9jayI6Nzp7czo0MjoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxEb2NCbG9jawBzdW1tYXJ5IjtzOjMyOiJgcHN5c2hgIGNvbW1hbmQgbGluZSBleGVjdXRhYmxlLiI7czo0NjoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxEb2NCbG9jawBkZXNjcmlwdGlvbiI7Tzo0NToicGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXERvY0Jsb2NrXERlc2NyaXB0aW9uIjoyOntzOjU5OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXERvY0Jsb2NrXERlc2NyaXB0aW9uAGJvZHlUZW1wbGF0ZSI7czowOiIiO3M6NTE6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cRG9jQmxvY2tcRGVzY3JpcHRpb24AdGFncyI7YTowOnt9fXM6Mzk6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cRG9jQmxvY2sAdGFncyI7YToxOntpOjA7Tzo0NjoicGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXERvY0Jsb2NrXFRhZ3NcUmV0dXJuXyI6Mzp7czo3OiIAKgB0eXBlIjtPOjM4OiJwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cVHlwZXNcT2JqZWN0XyI6MTp7czo0NToiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxUeXBlc1xPYmplY3RfAGZxc2VuIjtPOjMwOiJwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cRnFzZW4iOjI6e3M6Mzc6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cRnFzZW4AZnFzZW4iO3M6ODoiXENsb3N1cmUiO3M6MzY6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cRnFzZW4AbmFtZSI7czo3OiJDbG9zdXJlIjt9fXM6NzoiACoAbmFtZSI7czo2OiJyZXR1cm4iO3M6MTQ6IgAqAGRlc2NyaXB0aW9uIjtPOjQ1OiJwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cRG9jQmxvY2tcRGVzY3JpcHRpb24iOjI6e3M6NTk6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cRG9jQmxvY2tcRGVzY3JpcHRpb24AYm9keVRlbXBsYXRlIjtzOjA6IiI7czo1MToiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxEb2NCbG9ja1xEZXNjcmlwdGlvbgB0YWdzIjthOjA6e319fX1zOjQyOiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXERvY0Jsb2NrAGNvbnRleHQiO3I6MzA7czo0MzoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxEb2NCbG9jawBsb2NhdGlvbiI7TzozMzoicGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXExvY2F0aW9uIjoyOntzOjQ1OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXExvY2F0aW9uAGxpbmVOdW1iZXIiO2k6MjgyO3M6NDc6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cTG9jYXRpb24AY29sdW1uTnVtYmVyIjtpOjA7fXM6NTA6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cRG9jQmxvY2sAaXNUZW1wbGF0ZVN0YXJ0IjtiOjA7czo0ODoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxEb2NCbG9jawBpc1RlbXBsYXRlRW5kIjtiOjA7fXM6NDg6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXEZ1bmN0aW9uXwBsb2NhdGlvbiI7TzozMzoicGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXExvY2F0aW9uIjoyOntzOjQ1OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXExvY2F0aW9uAGxpbmVOdW1iZXIiO2k6Mjg3O3M6NDc6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cTG9jYXRpb24AY29sdW1uTnVtYmVyIjtpOjA7fXM6NTA6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXEZ1bmN0aW9uXwByZXR1cm5UeXBlIjtPOjM3OiJwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cVHlwZXNcTWl4ZWRfIjowOnt9fX1zOjQ0OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxGaWxlAGNvbnN0YW50cyI7YTowOnt9czo0MjoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcRmlsZQBjbGFzc2VzIjthOjA6e31zOjQ1OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxGaWxlAGludGVyZmFjZXMiO2E6MDp7fXM6NDE6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXEZpbGUAdHJhaXRzIjthOjA6e319";